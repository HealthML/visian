name: Nx Affected CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Load Yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install
        run: yarn install --immutable

      - run: git fetch --no-tags --prune --depth=5 origin master
      - run: yarn affected:lint --base=origin/master
      - run: yarn affected:test --base=origin/master
      - run: yarn affected:compile --base=origin/master

      - name: Build (testing)
        if: success() && github.ref != 'refs/heads/develop' && github.ref != 'refs/heads/master'
        run: yarn affected:build --skip-nx-cache --baseHref ${NX_DEPLOY_URL:-/} --deployUrl ${NX_DEPLOY_URL:-/} --base=origin/develop

      - name: Build (production)
        if: success() && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
        run: yarn nx run-many --target=build --projects=editor,ar-demo --prod --skip-nx-cache --baseHref ${NX_DEPLOY_URL:-/} --deployUrl ${NX_DEPLOY_URL:-/}

      - uses: actions/upload-artifact@v2
        if: success() && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
        with:
          name: editor-build
          path: dist/apps/editor/
          if-no-files-found: ignore
          retention-days: 1
      - uses: actions/upload-artifact@v2
        if: success() && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
        with:
          name: ar-demo-build
          path: dist/apps/ar-demo/
          if-no-files-found: ignore
          retention-days: 1

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    if: success() && github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: editor-build
          path: dist
      - name: Check if build exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "dist/index.html"
      - name: Deploy to testing
        uses: peaceiris/actions-gh-pages@v3
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          cname: dev.visian.org
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          force_orphan: true

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build
    if: success() && github.ref == 'refs/heads/master'

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: editor-build
          path: dist
      - name: Check if build exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "dist/index.html"
      - name: Deploy to production
        uses: peaceiris/actions-gh-pages@v3
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          cname: app.visian.org
          deploy_key: ${{ secrets.PROD_REPO_DEPLOY_KEY }}
          external_repository: HealthML/visian-prod
          publish_branch: main
          publish_dir: ./dist
          force_orphan: true
